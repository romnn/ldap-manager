# Default values for ldapmanager.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

openldap:
  enabled: true
  fullnameOverride: ldapmanager-openldap
  adminPassword: admin
  configPassword: config
  env:
    LDAP_ORGANISATION: Example Inc.
    LDAP_DOMAIN: example.org
    LDAP_BASE_DN: dc=example,dc=org
    LDAP_READONLY_USER: "true"
    LDAP_READONLY_USER_USERNAME: readonly
    LDAP_READONLY_USER_PASSWORD: readonly
    LDAP_TLS: "false"
    LDAP_RFC2307BIS_SCHEMA: "true"

ldap:
  host: ldapmanager-openldap
  # port: 389
  # protocol: "ldap"
  adminPassword: admin
  configPassword: config
  readonly:
    user: readonly
    password: readonly
  organization: Example Inc.
  domain: example.org
  baseDN: dc=example,dc=org
  tls: "false"
  useRFC230BIS: "true"

# log: "info"
static: {}
  # enabled: "true"
  # root: "./frontend/dist"

auth:
  # privateKey: ""
  # jwksJSON: ""
  # privateKeyFile: ""
  # jwksJSONFile: ""
  generateKeys: "true" 
  # expirationSeconds: 86400
  # issuer: "issuer@example.org"
  # audience: "example.org"

# groupsOU: "groups"
# usersOU: "users"
# groupsDN: "" # (if left empty, will be generated from groupsOU and baseDN (e.g.ou=groups,dc=example,dc=org))
# usersDN: "" # (if left empty, will be generated from usersOU and baseDN (e.g.ou=users,dc=example,dc=org))
# groupMembershipAttribute: "uniqueMember"
# groupMembershipUsesUID: "false"
# accountAttribute: "uid"
# groupAttribute: "gid"
# defaultUserGroup: "users"
# defaultAdminGroup: "admins"
# defaultLoginShell: "/bin/bash"
# defaultAdminUsername: "admin"
# defaultAdminPassword: "admin"
# forceCreateAdmin: "false"

# additionalEnv:
#  - name: "USERNAME"
#   value: ""
#  - name: "PASSWORD"
#   value: ""

replicaCount: 1

image:
  repository: romnn/ldap-manager
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.10"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  httpPort: 80
  grpcPort: 9090

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  httpHosts:
    - host: ldapmanager.example.org
      paths: ["/"]
  grpcHosts: {}
  #   - host: ldapmanager.example.org
  #     paths: ["/"]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}