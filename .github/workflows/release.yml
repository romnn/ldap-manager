name: release
on:
  push:
    tags:
      - "*"

jobs:
  publish-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: query
        uses: romnn/query-git-action@main

      - name: Lint helm chart
        run: helm lint deployment/helm/charts/ldapmanager/

      - name: Package helm chart
        run: >
          helm package
          --dependency-update
          --app-version=${{ steps.query.outputs.semver_version }}
          --version=${{ steps.query.outputs.semver_version }}
          --destination ./website/charts deployment/helm/charts/ldapmanager

      - name: Package helm chart
        run: >
          helm repo index
          --url https://${{ steps.query.outputs.github_repo_user }}.github.io/${{ steps.query.outputs.github_repo_name }}/charts
          ./website/charts

      - name: Deploy to pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: website
          clean: true

  publish-binary:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel:
        # linux/386, linux/amd64, linux/arm64
        # windows/386, windows/amd64
        # darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10' 

      - uses: actions/setup-go@v3
        with:
          go-version: 1.19.x

      - id: query
        uses: romnn/query-git-action@main

      - name: Set binary name
        id: bin_name
        env:
          BIN: ldap-manager-${{ matrix.goos }}-${{ matrix.goarch }}
        run: |
          if [ ${{ matrix.goos }} == "windows" ]
          then
            export BIN=$BIN.exe
          fi
          echo "BIN=$BIN" >> $GITHUB_OUTPUT

      - name: Build release binary
        env:
          GOARCH: ${{ matrix.goarch }}
          GOOS: ${{ matrix.goos }}
          LDFLAGS: >
            -w
            -s
            -X main.Version=${{ steps.query.outputs.semver_version }}
            -X main.Rev=${{ steps.query.outputs.git_commit }}
        run: >
          go build -a 
          -ldflags="$LDFLAGS"
          -o build/${{ steps.bin_name.outputs.BIN }} 
          github.com/romnn/ldap-manager/cmd/ldap-manager

      - name: Upload release binaries
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          body: ldap-manager ${{ steps.query.outputs.semver_version }}
          file: build/*
          tag: ${{ steps.query.outputs.semver_version }}
          release_name: ${{ steps.query.outputs.semver_version }}
          overwrite: true
          file_glob: true

  publish-container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - id: query
        uses: romnn/query-git-action@main

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build docker container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          build-args: |
            version=${{ steps.query.outputs.semver_version }}
            rev=${{ steps.query.outputs.git_commit }}

          tags: |
            romnn/ldap-manager:${{ steps.query.outputs.docker_tag }}
