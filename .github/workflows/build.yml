on: [push, pull_request]

name: build
jobs:
  publish-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Lint helm chart
        run: helm lint deployment/helm/charts/ldapmanager/

      - run: |
          echo "REPO_USER=$(echo ${GITHUB_REPOSITORY} | awk -F / '{print $1}' )" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F / '{print $2}' )" >> $GITHUB_ENV

      - name: Package helm chart
        run: |
          touch ./website/.nojekyll
          helm package --dependency-update --version=${{ steps.query.outputs.stable_semver_version }} --destination ./website/charts deployment/helm/charts/ldapmanager
          helm repo index --url https://${{ env.REPO_USER }}.github.io/${{ env.REPO_NAME }}/charts ./website/charts

      - name: Deploy to pages
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: website
          CLEAN: true

  ldapmanager:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version:
          - "1.19.x"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Compile protos
        run: |
          pip install invoke
          sudo apt-get install -y protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest
          go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2@latest
          inv compile-go-protos

      - name: Build
        run: go build -race ./...

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Compile protos
        run: |
          pip install invoke
          sudo apt-get install -y protobuf-compiler
          inv compile-ts-protos
          cd web/generated
          yarn build

      - name: Build web frontend
        run: |
          cd web/
          yarn install --dev
          yarn build

  container:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - id: query
        uses: romnn/query-git-action@master

      - name: Build docker container
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: false
          build-args: |
            version=${{ steps.query.outputs.stable_semver_version }}
          tags: |
            romnn/ldap-manager:latest
